digraph g {

	rankdir="LR"

	__invisible__[shape="point", color="forestgreen"]
	q0[label="q0 ≝ and(¬(p0 ≝ Portes(1)=ouvertes), ¬(p2 ≝ ∃(R ∈ Rames).(and(R=1, Mvt(R)=1, ∀(R1 ∈ Rames).(R1 ≠ R ⇒ or(Pos(R1) ≠ (Pos(R) + Dir(R)), Dir(R1) ≠ Dir(R)))))), ¬(p1 ≝ ∃(R ∈ Rames).(and(R=1, Portes(R)=refermees, Mvt(R)=0, or(Pos(R) ≠ NS1, Dir(R) ≠ 1), or(Pos(R) ≠ 0, Dir(R) ≠ -1), ∀(R1 ∈ Rames).(and(R1 ≠ R) ⇒ or(Pos(R1) ≠ Pos(R), Dir(R1) ≠ Dir(R)))))))", shape="box", style="rounded, filled", color="forestgreen", fillcolor="limegreen", penwidth=3] // Initial
	q1[label="q1 ≝ and(¬(p0 ≝ Portes(1)=ouvertes), p2 ≝ ∃(R ∈ Rames).(and(R=1, Mvt(R)=1, ∀(R1 ∈ Rames).(R1 ≠ R ⇒ or(Pos(R1) ≠ (Pos(R) + Dir(R)), Dir(R1) ≠ Dir(R))))), ¬(p1 ≝ ∃(R ∈ Rames).(and(R=1, Portes(R)=refermees, Mvt(R)=0, or(Pos(R) ≠ NS1, Dir(R) ≠ 1), or(Pos(R) ≠ 0, Dir(R) ≠ -1), ∀(R1 ∈ Rames).(and(R1 ≠ R) ⇒ or(Pos(R1) ≠ Pos(R), Dir(R1) ≠ Dir(R)))))))", shape="box", style="rounded, filled", color="forestgreen", fillcolor="limegreen"]
	q2[label="q2 ≝ and(¬(p0 ≝ Portes(1)=ouvertes), ¬(p2 ≝ ∃(R ∈ Rames).(and(R=1, Mvt(R)=1, ∀(R1 ∈ Rames).(R1 ≠ R ⇒ or(Pos(R1) ≠ (Pos(R) + Dir(R)), Dir(R1) ≠ Dir(R)))))), p1 ≝ ∃(R ∈ Rames).(and(R=1, Portes(R)=refermees, Mvt(R)=0, or(Pos(R) ≠ NS1, Dir(R) ≠ 1), or(Pos(R) ≠ 0, Dir(R) ≠ -1), ∀(R1 ∈ Rames).(and(R1 ≠ R) ⇒ or(Pos(R1) ≠ Pos(R), Dir(R1) ≠ Dir(R))))))", shape="box", style="rounded, filled", color="forestgreen", fillcolor="limegreen"]
	q4[label="q4 ≝ and(p0 ≝ Portes(1)=ouvertes, ¬(p2 ≝ ∃(R ∈ Rames).(and(R=1, Mvt(R)=1, ∀(R1 ∈ Rames).(R1 ≠ R ⇒ or(Pos(R1) ≠ (Pos(R) + Dir(R)), Dir(R1) ≠ Dir(R)))))), ¬(p1 ≝ ∃(R ∈ Rames).(and(R=1, Portes(R)=refermees, Mvt(R)=0, or(Pos(R) ≠ NS1, Dir(R) ≠ 1), or(Pos(R) ≠ 0, Dir(R) ≠ -1), ∀(R1 ∈ Rames).(and(R1 ≠ R) ⇒ or(Pos(R1) ≠ Pos(R), Dir(R1) ≠ Dir(R)))))))", shape="box", style="rounded, filled", color="forestgreen", fillcolor="limegreen"]

	__invisible__ -> q0[color="forestgreen"]
	q0 -> q0[label="Arrivee_Station", color="forestgreen"]
	q0 -> q0[label="Changement_Direction", color="forestgreen"]
	q0 -> q0[label="Depart_Station", color="forestgreen"]
	q0 -> q0[label="Fermeture_Portes", color="forestgreen"]
	q0 -> q0[label="Ouverture_Portes", color="forestgreen"]
	q0 -> q1[label="Changement_Direction", color="forestgreen"]
	q1 -> q1[label="Arrivee_Station", color="forestgreen"]
	q1 -> q1[label="Depart_Station", color="forestgreen"]
	q1 -> q1[label="Fermeture_Portes", color="forestgreen"]
	q1 -> q1[label="Ouverture_Portes", color="forestgreen"]
	q1 -> q0[label="Arrivee_Station", color="forestgreen"]
	q0 -> q2[label="Arrivee_Station", color="forestgreen"]
	q2 -> q2[label="Arrivee_Station", color="forestgreen"]
	q2 -> q2[label="Changement_Direction", color="forestgreen"]
	q2 -> q2[label="Depart_Station", color="forestgreen"]
	q2 -> q2[label="Fermeture_Portes", color="forestgreen"]
	q2 -> q2[label="Ouverture_Portes", color="forestgreen"]
	q2 -> q0[label="Depart_Station", color="forestgreen"]
	q2 -> q1[label="Depart_Station", color="forestgreen"]
	q0 -> q4[label="Ouverture_Portes", color="forestgreen"]
	q4 -> q4[label="Arrivee_Station", color="forestgreen"]
	q4 -> q4[label="Changement_Direction", color="forestgreen"]
	q4 -> q4[label="Depart_Station", color="forestgreen"]
	q4 -> q4[label="Fermeture_Portes", color="forestgreen"]
	q4 -> q4[label="Ouverture_Portes", color="forestgreen"]
	q4 -> q0[label="Fermeture_Portes", color="forestgreen"]
	q4 -> q2[label="Fermeture_Portes", color="forestgreen"]

}
