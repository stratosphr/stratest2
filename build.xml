<?xml version="1.0" encoding="UTF-8"?>
<project name="stratest" default="all">


    <!-- Uncomment the following property if no tests compilation is needed -->
    <!-- 
  <property name="skip.tests" value="true"/>
   -->

    <!--<property file="stratest-${os.name}.properties"/>
    <echo>stratest-${os.name}-${os.arch}.properties</echo>

    <fail message="FILE NOT FOUND: stratest-${os.name}.properties">
        <condition>
            <not>
                <available file="stratest-${os.name}.properties" />
            </not>
        </condition>
    </fail>-->

    <fail message="Property jdk.home.1.8 must be defined. ${line.separator}Try the following command: 'ant -Djdk.home.1.8=&quot;path/to/jdk-1.8&quot;'. ${line.separator}Note that &quot;path/to/jdk-1.8&quot; should be the path to the JDK version 1.8. This folder should contain a &quot;bin&quot; folder with the &quot;javac&quot; JAVA compiler in it. ${line.separator}The usual paths to the JDK 1.8 are the following and should look similar on your system, depending on the platform and architecture you use: ${line.separator}&#x0009;On Linux:${line.separator}&#x0009;&#x0009;/usr/lib/jvm/java-8-openjdk-amd64${line.separator}&#x0009;&#x0009;/usr/lib/jvm/java-8-oracle${line.separator}&#x0009;On Windows:${line.separator}&#0009;&#0009;C:/Program Files/Java/jdk1.8.0_xxx${line.separator}&#x0009;On MAC:${line.separator}&#x0009;&#x0009;Library/Java/JavaVirtualMachines/jdk1.8.x_xx.jdk">
        <condition>
            <not>
                <isset property="jdk.home.1.8"/>
            </not>
        </condition>
    </fail>


    <!-- Compiler options -->
    <property name="compiler.debug" value="on"/>
    <property name="compiler.generate.no.warnings" value="off"/>
    <property name="compiler.args" value=""/>
    <property name="compiler.max.memory" value="700m"/>
    <patternset id="ignored.files">
        <exclude name="**/*.hprof/**"/>
        <exclude name="**/*.pyc/**"/>
        <exclude name="**/*.pyo/**"/>
        <exclude name="**/*.rbc/**"/>
        <exclude name="**/*.yarb/**"/>
        <exclude name="**/*~/**"/>
        <exclude name="**/.DS_Store/**"/>
        <exclude name="**/.git/**"/>
        <exclude name="**/.hg/**"/>
        <exclude name="**/.svn/**"/>
        <exclude name="**/CVS/**"/>
        <exclude name="**/__pycache__/**"/>
        <exclude name="**/_svn/**"/>
        <exclude name="**/vssver.scc/**"/>
        <exclude name="**/vssver2.scc/**"/>
    </patternset>
    <patternset id="library.patterns">
        <include name="*.war"/>
        <include name="*.swc"/>
        <include name="*.zip"/>
        <include name="*.egg"/>
        <include name="*.ane"/>
        <include name="*.jar"/>
        <include name="*.ear"/>
    </patternset>
    <patternset id="compiler.resources">
        <exclude name="**/?*.java"/>
        <exclude name="**/?*.form"/>
        <exclude name="**/?*.class"/>
        <exclude name="**/?*.groovy"/>
        <exclude name="**/?*.scala"/>
        <exclude name="**/?*.flex"/>
        <exclude name="**/?*.kt"/>
        <exclude name="**/?*.clj"/>
        <exclude name="**/?*.aj"/>
    </patternset>

    <!-- JDK definitions -->

    <property name="jdk.bin.1.8" value="${jdk.home.1.8}/bin"/>
    <path id="jdk.classpath.1.8">
        <fileset dir="${jdk.home.1.8}">
            <include name="jre/lib/charsets.jar"/>
            <include name="jre/lib/ext/cldrdata.jar"/>
            <include name="jre/lib/ext/dnsns.jar"/>
            <include name="jre/lib/ext/icedtea-sound.jar"/>
            <include name="jre/lib/ext/jaccess.jar"/>
            <include name="jre/lib/ext/localedata.jar"/>
            <include name="jre/lib/ext/nashorn.jar"/>
            <include name="jre/lib/ext/sunec.jar"/>
            <include name="jre/lib/ext/sunjce_provider.jar"/>
            <include name="jre/lib/ext/sunpkcs11.jar"/>
            <include name="jre/lib/ext/zipfs.jar"/>
            <include name="jre/lib/jce.jar"/>
            <include name="jre/lib/jsse.jar"/>
            <include name="jre/lib/management-agent.jar"/>
            <include name="jre/lib/resources.jar"/>
            <include name="jre/lib/rt.jar"/>
        </fileset>
    </path>

    <property name="project.jdk.home" value="${jdk.home.1.8}"/>
    <property name="project.jdk.bin" value="${jdk.bin.1.8}"/>
    <property name="project.jdk.classpath" value="jdk.classpath.1.8"/>


    <!-- Project Libraries -->

    <path id="library.z3.classpath">
        <pathelement location="${basedir}/libs/z3/com.microsoft.z3.jar"/>
    </path>

    <!-- Modules -->


    <!-- Module stratest -->

    <dirname property="module.stratest.basedir" file="${ant.file}"/>


    <property name="module.jdk.home.stratest" value="${project.jdk.home}"/>
    <property name="module.jdk.bin.stratest" value="${project.jdk.bin}"/>
    <property name="module.jdk.classpath.stratest" value="${project.jdk.classpath}"/>

    <property name="compiler.args.stratest" value="-encoding UTF-8 -source 8 -target 8 ${compiler.args}"/>

    <property name="stratest.output.dir" value="${module.stratest.basedir}/out/production/stratest"/>
    <property name="stratest.testoutput.dir" value="${module.stratest.basedir}/out/test/stratest"/>

    <path id="stratest.module.bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <path id="stratest.module.production.classpath">
        <path refid="${module.jdk.classpath.stratest}"/>
        <fileset dir="${basedir}/libs">
            <patternset refid="library.patterns"/>
        </fileset>
        <path refid="library.z3.classpath"/>
    </path>

    <path id="stratest.runtime.production.module.classpath">
        <pathelement location="${stratest.output.dir}"/>
        <fileset dir="${basedir}/libs">
            <patternset refid="library.patterns"/>
        </fileset>
        <path refid="library.z3.classpath"/>
    </path>

    <path id="stratest.module.classpath">
        <path refid="${module.jdk.classpath.stratest}"/>
        <pathelement location="${stratest.output.dir}"/>
        <fileset dir="${basedir}/libs">
            <patternset refid="library.patterns"/>
        </fileset>
        <path refid="library.z3.classpath"/>
    </path>

    <path id="stratest.runtime.module.classpath">
        <pathelement location="${stratest.testoutput.dir}"/>
        <pathelement location="${stratest.output.dir}"/>
        <fileset dir="${basedir}/libs">
            <patternset refid="library.patterns"/>
        </fileset>
        <path refid="library.z3.classpath"/>
    </path>


    <patternset id="excluded.from.module.stratest">
        <patternset refid="ignored.files"/>
    </patternset>

    <patternset id="excluded.from.compilation.stratest">
        <patternset refid="excluded.from.module.stratest"/>
    </patternset>

    <path id="stratest.module.sourcepath">
        <dirset dir="${module.stratest.basedir}">
            <include name="src"/>
            <include name="resources"/>
        </dirset>
    </path>


    <target name="compile.module.stratest" depends="compile.module.stratest.production,compile.module.stratest.tests"
            description="Compile module stratest"/>

    <target name="compile.module.stratest.production" description="Compile module stratest; production classes">
        <mkdir dir="${stratest.output.dir}"/>
        <javac includeantruntime="false" destdir="${stratest.output.dir}" debug="${compiler.debug}"
               nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true"
               executable="${module.jdk.bin.stratest}/javac">
            <compilerarg line="${compiler.args.stratest}"/>
            <bootclasspath refid="stratest.module.bootclasspath"/>
            <classpath refid="stratest.module.production.classpath"/>
            <src refid="stratest.module.sourcepath"/>
            <patternset refid="excluded.from.compilation.stratest"/>
        </javac>

        <copy todir="${stratest.output.dir}">
            <fileset dir="${module.stratest.basedir}/src">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
            <fileset dir="${module.stratest.basedir}/resources">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.module.stratest.tests" depends="compile.module.stratest.production"
            description="compile module stratest; test classes" unless="skip.tests"/>

    <target name="clean.module.stratest" description="cleanup module">
        <delete dir="${stratest.output.dir}"/>
        <delete dir="${stratest.testoutput.dir}"/>
    </target>

    <target name="init" description="Build initialization">
        <!-- Perform any build initialization in this target -->
    </target>

    <target name="copy.resources">
        <copy todir="${stratest.output.dir}/resources">
            <fileset dir="resources"/>
        </copy>
        <copy todir="${stratest.output.dir}/libs">
            <fileset dir="libs"/>
        </copy>
    </target>

    <target name="build.jar">
        <jar destfile="stratest.jar">
            <fileset dir="${stratest.output.dir}"/>
            <!--<fileset dir="resources/eventb"/>-->
            <manifest>
                <attribute name="Main-Class" value="Main"/>
                <attribute name="Class-Path" value="libs/z3/com.microsoft.z3.jar"/>
            </manifest>
        </jar>
    </target>

    <target name="clean" depends="clean.module.stratest" description="cleanup all"/>

    <target name="build.modules" depends="init, clean, compile.module.stratest, copy.resources, build.jar"
            description="build all modules"/>

    <target name="all" depends="build.modules" description="build all"/>
</project>
